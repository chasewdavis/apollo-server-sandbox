input PlayerInput {
    userName: String!
    id: ID
}

type Player {
    id: ID!
    userName: String!
}

input GameRoomInput {
    name: String!
    players: [PlayerInput]
}

type GameRoom {
    id: ID!
    name: String!
    players: [Player]
}

type Query {
    gameRooms: [GameRoom]
    players: [Player]
}

type Mutation {
    createPlayer(userName: String!): Player
    joinGameRoom(gameRoomId: String!, playerId: ID!): GameRoom
    leaveGameRoom(gameRoomId: ID!, playerId: ID!): GameRoom
    createGameRoom(gameRoomName: String!, player: PlayerInput!): GameRoom
}

type Subscription {
    playerJoined(gameRoomId: ID!): Player
    playerLeft(gameRoomId: ID!): Player
}
