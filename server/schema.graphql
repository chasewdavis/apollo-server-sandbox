input PlayerInput {
    playerName: String!
    playerId: ID
}

type Player {
    playerId: ID!
    playerName: String
    status: String
}

type GameRoom {
    gameRoomId: ID!
    createdAt: String!
    createdBy: String!
    gameRoomName: String!
}

type Status {
    playerStatus: String!
    playerId: String!
    gameRoomId: String!
    lastAccessAt: String
}

type Query {
    player(playerId: ID!): Player
    gameRoom(gameRoomId: ID!): GameRoom
    gameRoomMembers(gameRoomId: ID!): [Player]
}

type Mutation {
    createPlayer(playerName: String!): Player
    deletePlayer(playerId: ID!): [Player]
    gameRoomStatusUpdate(playerId: String!, gameRoomId: String!, playerStatus: String): Status
    createGameRoom(gameRoomName: String!, playerId: ID!): GameRoom
}

type Subscription {
    playerJoined(gameRoomId: ID!): Player
    playerLeft(gameRoomId: ID!): Player
}
